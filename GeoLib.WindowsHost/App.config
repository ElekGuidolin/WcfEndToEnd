<?xml version="1.0" encoding="utf-8"?>
<configuration>
	<configSections>
		<!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 -->
		<section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
	</configSections>
	<connectionStrings>
		<!--<add name="main" connectionString="Server=(local);Database=ZipCodeData;Trusted_Connection=True;" providerName="System.Data.SqlClient" />-->
		<add name="main" connectionString="Server=AUSTRALIA\SQLEXPRESS;Database=ZipCodeData;Trusted_Connection=True;" providerName="System.Data.SqlClient" />
	</connectionStrings>
	<startup>
		<supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5.1" />
	</startup>
	<entityFramework>
		<defaultConnectionFactory type="System.Data.Entity.Infrastructure.SqlConnectionFactory, EntityFramework" />
		<providers>
			<provider invariantName="System.Data.SqlClient" type="System.Data.Entity.SqlServer.SqlProviderServices, EntityFramework.SqlServer" />
		</providers>
	</entityFramework>
	<system.serviceModel>
		<bindings>
			<netTcpBinding>
				<binding	name="lowerTimeOut" sendTimeout="00:20:00"
							maxReceivedMessageSize="2000000"
							receiveTimeout="00:20:00">
				</binding>
			</netTcpBinding>
		</bindings>
		<!-- 
		serviceDebug is a very helpful configuration for debugging, do not EVER send this to production.
		serviceThrottling can and may go to production with configuration.
		-->
		<behaviors>
			<serviceBehaviors>
				<behavior name="debug">
					<serviceDebug includeExceptionDetailInFaults="true" />
					<serviceThrottling	maxConcurrentSessions="100"
										maxConcurrentCalls="16"
										maxConcurrentInstances="116" />
				</behavior>
			</serviceBehaviors>
		</behaviors>
		<services>
			<service name="GeoLib.Services.GeoManager">
				<endpoint	address="net.tcp://localhost:8009/GeoService"
							binding="netTcpBinding"
							contract="GeoLib.Contracts.IGeoService"
							bindingConfiguration="lowerTimeOut" />

				<endpoint	address="http://localhost/GeoServices"
							binding="basicHttpBinding"
							contract="GeoLib.Contracts.IGeoService" />
			</service>
			<service name="GeoLib.WindowsHost.Services.MessageManager">
				<endpoint	address="net.pipe://localhost/MessageService"
							binding="netNamedPipeBinding"
							contract="GeoLib.WindowsHost.Contracts.IMessageService" />

				<endpoint	address="net.tcp://localhost:8010/MessageService"
							binding="netTcpBinding"
							contract="GeoLib.WindowsHost.Contracts.IMessageService"
							bindingConfiguration="lowerTimeOut" />
			</service>
		</services>
		<client>
			<endpoint	address="net.pipe://localhost/MessageService"
						binding="netNamedPipeBinding"
						contract="GeoLib.WindowsHost.Contracts.IMessageService" />
		</client>
	</system.serviceModel>
</configuration>